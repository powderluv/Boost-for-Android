diff -urN boost_1_55_0-orig/boost/asio/detail/socket_types.hpp boost_1_55_0/boost/asio/detail/socket_types.hpp
--- boost_1_55_0-orig/boost/asio/detail/socket_types.hpp	2013-09-22 15:13:33.000000000 -0700
+++ boost_1_55_0/boost/asio/detail/socket_types.hpp	2015-07-16 16:18:10.000000000 -0700
@@ -278,7 +278,12 @@
 typedef int socket_type;
 const int invalid_socket = -1;
 const int socket_error_retval = -1;
+// @Moss - Some platforms do not define it (Android)
+#if defined(INET_ADDRSTRLEN)
 const int max_addr_v4_str_len = INET_ADDRSTRLEN;
+#else // defined(INET_ADDRSTRLEN)
+const int max_addr_v4_str_len = 16;
+#endif // defined(INET_ADDRSTRLEN)
 #if defined(INET6_ADDRSTRLEN)
 const int max_addr_v6_str_len = INET6_ADDRSTRLEN + 1 + IF_NAMESIZE;
 #else // defined(INET6_ADDRSTRLEN)
diff -urN boost_1_55_0-orig/boost/asio/ip/impl/address_v6.ipp boost_1_55_0/boost/asio/ip/impl/address_v6.ipp
--- boost_1_55_0-orig/boost/asio/ip/impl/address_v6.ipp	2013-09-22 15:13:33.000000000 -0700
+++ boost_1_55_0/boost/asio/ip/impl/address_v6.ipp	2015-07-16 16:18:10.000000000 -0700
@@ -11,6 +11,23 @@
 #ifndef BOOST_ASIO_IP_IMPL_ADDRESS_V6_IPP
 #define BOOST_ASIO_IP_IMPL_ADDRESS_V6_IPP
 
+// @Moss - Define IPv6 macros
+#if !defined(IN6_IS_ADDR_MULTICAST) 
+#define IN6_IS_ADDR_MULTICAST(a) (((__const uint8_t *) (a))[0] == 0xff)
+#endif
+
+#if !defined(IN6_IS_ADDR_MC_NODELOCAL)
+#define IN6_IS_ADDR_MC_NODELOCAL(a) \
+        (IN6_IS_ADDR_MULTICAST(a) \
+         && ((((__const uint8_t *) (a))[1] & 0xf) == 0x1))
+#endif
+
+#if !defined(IN6_IS_ADDR_MC_GLOBAL)
+#define IN6_IS_ADDR_MC_GLOBAL(a) \
+        (IN6_IS_ADDR_MULTICAST(a) \
+         && ((((__const uint8_t *) (a))[1] & 0xf) == 0xe))
+#endif
+
 #if defined(_MSC_VER) && (_MSC_VER >= 1200)
 # pragma once
 #endif // defined(_MSC_VER) && (_MSC_VER >= 1200)
diff -urN boost_1_55_0-orig/boost/config/user.hpp boost_1_55_0/boost/config/user.hpp
--- boost_1_55_0-orig/boost/config/user.hpp	2004-01-10 04:10:00.000000000 -0800
+++ boost_1_55_0/boost/config/user.hpp	2015-07-16 16:18:10.000000000 -0700
@@ -13,6 +13,14 @@
 //  configuration policy:
 //
 
+// Android defines
+#define _REENTRANT 1
+#define _GLIBCXX__PTHREADS 1
+// There is problem with std::atomic on android (and some other platforms).
+// See this link for more info:
+// https://code.google.com/p/android/issues/detail?id=42735#makechanges
+#define BOOST_ASIO_DISABLE_STD_ATOMIC 1
+
 // define this to locate a compiler config file:
 // #define BOOST_COMPILER_CONFIG <myheader>
 
diff -urN boost_1_55_0-orig/boost/interprocess/detail/workaround.hpp boost_1_55_0/boost/interprocess/detail/workaround.hpp
--- boost_1_55_0-orig/boost/interprocess/detail/workaround.hpp	2013-09-16 10:01:45.000000000 -0700
+++ boost_1_55_0/boost/interprocess/detail/workaround.hpp	2015-07-16 16:18:10.000000000 -0700
@@ -73,7 +73,7 @@
    #endif
 
    //Check for XSI shared memory objects. They are available in nearly all UNIX platforms
-   #if !defined(__QNXNTO__)
+   #if !defined(__QNXNTO__) && !defined(ANDROID) && !defined(__ANDROID__)
       #define BOOST_INTERPROCESS_XSI_SHARED_MEMORY_OBJECTS
    #endif
 
diff -urN boost_1_55_0-orig/boost/predef/other/endian.h boost_1_55_0/boost/predef/other/endian.h
--- boost_1_55_0-orig/boost/predef/other/endian.h	2013-10-14 22:23:53.000000000 -0700
+++ boost_1_55_0/boost/predef/other/endian.h	2015-07-16 16:18:10.000000000 -0700
@@ -53,7 +53,7 @@
  */
 #if !BOOST_ENDIAN_BIG_BYTE && !BOOST_ENDIAN_BIG_WORD && \
     !BOOST_ENDIAN_LITTLE_BYTE && !BOOST_ENDIAN_LITTLE_WORD
-#   if BOOST_LIB_C_GNU
+#   if BOOST_LIB_C_GNU || defined(ANDROID) || defined(__ANDROID__)
 #       include <endian.h>
 #   else
 #       if BOOST_OS_MACOS
diff -urN boost_1_55_0-orig/boost/thread/pthread/thread_data.hpp boost_1_55_0/boost/thread/pthread/thread_data.hpp
--- boost_1_55_0-orig/boost/thread/pthread/thread_data.hpp	2013-08-03 09:04:39.000000000 -0700
+++ boost_1_55_0/boost/thread/pthread/thread_data.hpp	2015-07-16 16:21:54.000000000 -0700
@@ -26,7 +26,9 @@
 #include <utility>
 
 #if defined(__ANDROID__)
-#include <asm/page.h> // http://code.google.com/p/android/issues/detail?id=39983
+# ifndef PAGE_SIZE
+#  define PAGE_SIZE 4096
+# endif
 #endif
 
 #include <pthread.h>
diff -urN boost_1_55_0-orig/libs/filesystem/src/operations.cpp boost_1_55_0/libs/filesystem/src/operations.cpp
--- boost_1_55_0-orig/libs/filesystem/src/operations.cpp	2013-08-09 02:29:39.000000000 -0700
+++ boost_1_55_0/libs/filesystem/src/operations.cpp	2015-07-16 16:18:10.000000000 -0700
@@ -73,14 +73,14 @@
     const fs::path dot_dot_path("..");
 #   include <sys/types.h>
 #   include <sys/stat.h>
-#   if !defined(__APPLE__) && !defined(__OpenBSD__) && !defined(__ANDROID__)
+#   if !defined(__APPLE__) && !defined(__OpenBSD__) && !defined(__ANDROID__) && !defined(ANDROID)
 #     include <sys/statvfs.h>
 #     define BOOST_STATVFS statvfs
 #     define BOOST_STATVFS_F_FRSIZE vfs.f_frsize
 #   else
 #     ifdef __OpenBSD__
 #     include <sys/param.h>
-#     elif defined(__ANDROID__)
+#     elif defined(__ANDROID__) || defined(ANDROID)
 #     include <sys/vfs.h>
 #     endif
 #     include <sys/mount.h>
@@ -208,7 +208,19 @@
          || ::mkdir(to.c_str(),from_stat.st_mode)!= 0))
 #   define BOOST_COPY_FILE(F,T,FailIfExistsBool)copy_file_api(F, T, FailIfExistsBool)
 #   define BOOST_MOVE_FILE(OLD,NEW)(::rename(OLD, NEW)== 0)
+#if defined(__ANDROID__) || defined(ANDROID)
+    int BOOST_RESIZE_FILE(const char *path, off_t size)
+    {
+      int result = -1;
+      int fd = open(path, O_WRONLY);
+      if (fd != -1)
+        result = ftruncate(fd, size);
+      close(fd);
+      return result;
+    }
+#else
 #   define BOOST_RESIZE_FILE(P,SZ)(::truncate(P, SZ)== 0)
+#endif
 
 #   define BOOST_ERROR_NOT_SUPPORTED ENOSYS
 #   define BOOST_ERROR_ALREADY_EXISTS EEXIST
